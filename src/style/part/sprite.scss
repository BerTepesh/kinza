// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$arrow-hover-name: 'arrow-hover';
$arrow-hover-x: 56px;
$arrow-hover-y: 0px;
$arrow-hover-offset-x: -56px;
$arrow-hover-offset-y: 0px;
$arrow-hover-width: 55px;
$arrow-hover-height: 38px;
$arrow-hover-total-width: 142px;
$arrow-hover-total-height: 113px;
$arrow-hover-image: '/img/sprite.png';
$arrow-hover: (56px, 0px, -56px, 0px, 55px, 38px, 142px, 113px, '/img/sprite.png', 'arrow-hover', );
$arrow-small-hover-name: 'arrow-small-hover';
$arrow-small-hover-x: 0px;
$arrow-small-hover-y: 97px;
$arrow-small-hover-offset-x: 0px;
$arrow-small-hover-offset-y: -97px;
$arrow-small-hover-width: 22px;
$arrow-small-hover-height: 16px;
$arrow-small-hover-total-width: 142px;
$arrow-small-hover-total-height: 113px;
$arrow-small-hover-image: '/img/sprite.png';
$arrow-small-hover: (0px, 97px, 0px, -97px, 22px, 16px, 142px, 113px, '/img/sprite.png', 'arrow-small-hover', );
$arrow-small-name: 'arrow-small';
$arrow-small-x: 27px;
$arrow-small-y: 97px;
$arrow-small-offset-x: -27px;
$arrow-small-offset-y: -97px;
$arrow-small-width: 22px;
$arrow-small-height: 16px;
$arrow-small-total-width: 142px;
$arrow-small-total-height: 113px;
$arrow-small-image: '/img/sprite.png';
$arrow-small: (27px, 97px, -27px, -97px, 22px, 16px, 142px, 113px, '/img/sprite.png', 'arrow-small', );
$arrow-name: 'arrow';
$arrow-x: 0px;
$arrow-y: 54px;
$arrow-offset-x: 0px;
$arrow-offset-y: -54px;
$arrow-width: 55px;
$arrow-height: 38px;
$arrow-total-width: 142px;
$arrow-total-height: 113px;
$arrow-image: '/img/sprite.png';
$arrow: (0px, 54px, 0px, -54px, 55px, 38px, 142px, 113px, '/img/sprite.png', 'arrow', );
$check-name: 'check';
$check-x: 54px;
$check-y: 97px;
$check-offset-x: -54px;
$check-offset-y: -97px;
$check-width: 14px;
$check-height: 11px;
$check-total-width: 142px;
$check-total-height: 113px;
$check-image: '/img/sprite.png';
$check: (54px, 97px, -54px, -97px, 14px, 11px, 142px, 113px, '/img/sprite.png', 'check', );
$fb-name: 'fb';
$fb-x: 116px;
$fb-y: 60px;
$fb-offset-x: -116px;
$fb-offset-y: -60px;
$fb-width: 23px;
$fb-height: 23px;
$fb-total-width: 142px;
$fb-total-height: 113px;
$fb-image: '/img/sprite.png';
$fb: (116px, 60px, -116px, -60px, 23px, 23px, 142px, 113px, '/img/sprite.png', 'fb', );
$google-name: 'google';
$google-x: 116px;
$google-y: 0px;
$google-offset-x: -116px;
$google-offset-y: 0px;
$google-width: 26px;
$google-height: 26px;
$google-total-width: 142px;
$google-total-height: 113px;
$google-image: '/img/sprite.png';
$google: (116px, 0px, -116px, 0px, 26px, 26px, 142px, 113px, '/img/sprite.png', 'google', );
$leaf-small-name: 'leaf-small';
$leaf-small-x: 60px;
$leaf-small-y: 54px;
$leaf-small-offset-x: -60px;
$leaf-small-offset-y: -54px;
$leaf-small-width: 33px;
$leaf-small-height: 32px;
$leaf-small-total-width: 142px;
$leaf-small-total-height: 113px;
$leaf-small-image: '/img/sprite.png';
$leaf-small: (60px, 54px, -60px, -54px, 33px, 32px, 142px, 113px, '/img/sprite.png', 'leaf-small', );
$leaf-name: 'leaf';
$leaf-x: 0px;
$leaf-y: 0px;
$leaf-offset-x: 0px;
$leaf-offset-y: 0px;
$leaf-width: 51px;
$leaf-height: 49px;
$leaf-total-width: 142px;
$leaf-total-height: 113px;
$leaf-image: '/img/sprite.png';
$leaf: (0px, 0px, 0px, 0px, 51px, 49px, 142px, 113px, '/img/sprite.png', 'leaf', );
$vk-name: 'vk';
$vk-x: 116px;
$vk-y: 31px;
$vk-offset-x: -116px;
$vk-offset-y: -31px;
$vk-width: 24px;
$vk-height: 24px;
$vk-total-width: 142px;
$vk-total-height: 113px;
$vk-image: '/img/sprite.png';
$vk: (116px, 31px, -116px, -31px, 24px, 24px, 142px, 113px, '/img/sprite.png', 'vk', );
$arrow-hover-2x-name: 'arrow-hover@2x';
$arrow-hover-2x-x: 112px;
$arrow-hover-2x-y: 0px;
$arrow-hover-2x-offset-x: -112px;
$arrow-hover-2x-offset-y: 0px;
$arrow-hover-2x-width: 110px;
$arrow-hover-2x-height: 76px;
$arrow-hover-2x-total-width: 284px;
$arrow-hover-2x-total-height: 226px;
$arrow-hover-2x-image: '/img/sprite@2x.png';
$arrow-hover-2x: (112px, 0px, -112px, 0px, 110px, 76px, 284px, 226px, '/img/sprite@2x.png', 'arrow-hover@2x', );
$arrow-small-hover-2x-name: 'arrow-small-hover@2x';
$arrow-small-hover-2x-x: 0px;
$arrow-small-hover-2x-y: 194px;
$arrow-small-hover-2x-offset-x: 0px;
$arrow-small-hover-2x-offset-y: -194px;
$arrow-small-hover-2x-width: 44px;
$arrow-small-hover-2x-height: 32px;
$arrow-small-hover-2x-total-width: 284px;
$arrow-small-hover-2x-total-height: 226px;
$arrow-small-hover-2x-image: '/img/sprite@2x.png';
$arrow-small-hover-2x: (0px, 194px, 0px, -194px, 44px, 32px, 284px, 226px, '/img/sprite@2x.png', 'arrow-small-hover@2x', );
$arrow-small-2x-name: 'arrow-small@2x';
$arrow-small-2x-x: 54px;
$arrow-small-2x-y: 194px;
$arrow-small-2x-offset-x: -54px;
$arrow-small-2x-offset-y: -194px;
$arrow-small-2x-width: 44px;
$arrow-small-2x-height: 32px;
$arrow-small-2x-total-width: 284px;
$arrow-small-2x-total-height: 226px;
$arrow-small-2x-image: '/img/sprite@2x.png';
$arrow-small-2x: (54px, 194px, -54px, -194px, 44px, 32px, 284px, 226px, '/img/sprite@2x.png', 'arrow-small@2x', );
$arrow-2x-name: 'arrow@2x';
$arrow-2x-x: 0px;
$arrow-2x-y: 108px;
$arrow-2x-offset-x: 0px;
$arrow-2x-offset-y: -108px;
$arrow-2x-width: 110px;
$arrow-2x-height: 76px;
$arrow-2x-total-width: 284px;
$arrow-2x-total-height: 226px;
$arrow-2x-image: '/img/sprite@2x.png';
$arrow-2x: (0px, 108px, 0px, -108px, 110px, 76px, 284px, 226px, '/img/sprite@2x.png', 'arrow@2x', );
$check-2x-name: 'check@2x';
$check-2x-x: 108px;
$check-2x-y: 194px;
$check-2x-offset-x: -108px;
$check-2x-offset-y: -194px;
$check-2x-width: 28px;
$check-2x-height: 22px;
$check-2x-total-width: 284px;
$check-2x-total-height: 226px;
$check-2x-image: '/img/sprite@2x.png';
$check-2x: (108px, 194px, -108px, -194px, 28px, 22px, 284px, 226px, '/img/sprite@2x.png', 'check@2x', );
$fb-2x-name: 'fb@2x';
$fb-2x-x: 232px;
$fb-2x-y: 120px;
$fb-2x-offset-x: -232px;
$fb-2x-offset-y: -120px;
$fb-2x-width: 46px;
$fb-2x-height: 46px;
$fb-2x-total-width: 284px;
$fb-2x-total-height: 226px;
$fb-2x-image: '/img/sprite@2x.png';
$fb-2x: (232px, 120px, -232px, -120px, 46px, 46px, 284px, 226px, '/img/sprite@2x.png', 'fb@2x', );
$google-2x-name: 'google@2x';
$google-2x-x: 232px;
$google-2x-y: 0px;
$google-2x-offset-x: -232px;
$google-2x-offset-y: 0px;
$google-2x-width: 52px;
$google-2x-height: 52px;
$google-2x-total-width: 284px;
$google-2x-total-height: 226px;
$google-2x-image: '/img/sprite@2x.png';
$google-2x: (232px, 0px, -232px, 0px, 52px, 52px, 284px, 226px, '/img/sprite@2x.png', 'google@2x', );
$leaf-small-2x-name: 'leaf-small@2x';
$leaf-small-2x-x: 120px;
$leaf-small-2x-y: 108px;
$leaf-small-2x-offset-x: -120px;
$leaf-small-2x-offset-y: -108px;
$leaf-small-2x-width: 66px;
$leaf-small-2x-height: 64px;
$leaf-small-2x-total-width: 284px;
$leaf-small-2x-total-height: 226px;
$leaf-small-2x-image: '/img/sprite@2x.png';
$leaf-small-2x: (120px, 108px, -120px, -108px, 66px, 64px, 284px, 226px, '/img/sprite@2x.png', 'leaf-small@2x', );
$leaf-2x-name: 'leaf@2x';
$leaf-2x-x: 0px;
$leaf-2x-y: 0px;
$leaf-2x-offset-x: 0px;
$leaf-2x-offset-y: 0px;
$leaf-2x-width: 102px;
$leaf-2x-height: 98px;
$leaf-2x-total-width: 284px;
$leaf-2x-total-height: 226px;
$leaf-2x-image: '/img/sprite@2x.png';
$leaf-2x: (0px, 0px, 0px, 0px, 102px, 98px, 284px, 226px, '/img/sprite@2x.png', 'leaf@2x', );
$vk-2x-name: 'vk@2x';
$vk-2x-x: 232px;
$vk-2x-y: 62px;
$vk-2x-offset-x: -232px;
$vk-2x-offset-y: -62px;
$vk-2x-width: 48px;
$vk-2x-height: 48px;
$vk-2x-total-width: 284px;
$vk-2x-total-height: 226px;
$vk-2x-image: '/img/sprite@2x.png';
$vk-2x: (232px, 62px, -232px, -62px, 48px, 48px, 284px, 226px, '/img/sprite@2x.png', 'vk@2x', );
$spritesheet-width: 142px;
$spritesheet-height: 113px;
$spritesheet-image: '/img/sprite.png';
$spritesheet-sprites: ($arrow-hover, $arrow-small-hover, $arrow-small, $arrow, $check, $fb, $google, $leaf-small, $leaf, $vk, );
$spritesheet: (142px, 113px, '/img/sprite.png', $spritesheet-sprites, );
$retina-spritesheet-width: 284px;
$retina-spritesheet-height: 226px;
$retina-spritesheet-image: '/img/sprite@2x.png';
$retina-spritesheet-sprites: ($arrow-hover-2x, $arrow-small-hover-2x, $arrow-small-2x, $arrow-2x, $check-2x, $fb-2x, $google-2x, $leaf-small-2x, $leaf-2x, $vk-2x, );
$retina-spritesheet: (284px, 226px, '/img/sprite@2x.png', $retina-spritesheet-sprites, );

// These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.
//
// The list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.
$arrow-hover-group-name: 'arrow-hover';
$arrow-hover-group: ('arrow-hover', $arrow-hover, $arrow-hover-2x, );
$arrow-small-hover-group-name: 'arrow-small-hover';
$arrow-small-hover-group: ('arrow-small-hover', $arrow-small-hover, $arrow-small-hover-2x, );
$arrow-small-group-name: 'arrow-small';
$arrow-small-group: ('arrow-small', $arrow-small, $arrow-small-2x, );
$arrow-group-name: 'arrow';
$arrow-group: ('arrow', $arrow, $arrow-2x, );
$check-group-name: 'check';
$check-group: ('check', $check, $check-2x, );
$fb-group-name: 'fb';
$fb-group: ('fb', $fb, $fb-2x, );
$google-group-name: 'google';
$google-group: ('google', $google, $google-2x, );
$leaf-small-group-name: 'leaf-small';
$leaf-small-group: ('leaf-small', $leaf-small, $leaf-small-2x, );
$leaf-group-name: 'leaf';
$leaf-group: ('leaf', $leaf, $leaf-2x, );
$vk-group-name: 'vk';
$vk-group: ('vk', $vk, $vk-2x, );
$retina-groups: ($arrow-hover-group, $arrow-small-hover-group, $arrow-small-group, $arrow-group, $check-group, $fb-group, $google-group, $leaf-small-group, $leaf-group, $vk-group, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `retina-sprite` mixin sets up rules and a media query for a sprite/retina sprite.
//   It should be used with a "retina group" variable.
//
// The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/
//
// $icon-home-group: ('icon-home', $icon-home, $icon-home-2x, );
//
// .icon-home {
//   @include retina-sprite($icon-home-group);
// }
@mixin sprite-background-size($sprite) {
  $sprite-total-width: nth($sprite, 7);
  $sprite-total-height: nth($sprite, 8);
  background-size: $sprite-total-width $sprite-total-height;
}

@mixin retina-sprite($retina-group) {
  $normal-sprite: nth($retina-group, 2);
  $retina-sprite: nth($retina-group, 3);
  @include sprite($normal-sprite);

  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    @include sprite-image($retina-sprite);
    @include sprite-background-size($normal-sprite);
  }
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}

// The `retina-sprites` mixin generates a CSS rule and media query for retina groups
//   This yields the same output as CSS retina template but can be overridden in SCSS
//
// @include retina-sprites($retina-groups);
@mixin retina-sprites($retina-groups) {
  @each $retina-group in $retina-groups {
    $sprite-name: nth($retina-group, 1);
    .#{$sprite-name} {
      @include retina-sprite($retina-group);
    }
  }
}
